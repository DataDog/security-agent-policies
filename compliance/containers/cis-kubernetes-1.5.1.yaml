schema:
  version: 1.0.0
name: CIS Kubernetes
framework: cis-kubernetes
version: 1.5.1
rules:
  - id: cis-kubernetes-1.5.1-1.1.1
    info:
      description: '[CIS Kubernetes] Ensure that the API server pod specification file permissions are set to 644 or more restrictive'
      control: 1.1.1
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/manifests/kube-apiserver.yaml
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.2
    info:
      description: '[CIS Kubernetes] Ensure that the API server pod specification file ownership is set to root:root'
      control: 1.1.2
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/manifests/kube-apiserver.yaml
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.3
    info:
      description: '[CIS Kubernetes] Ensure that the controller manager pod specification file permissions are set to 644 or more restrictive'
      control: 1.1.3
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/manifests/kube-controller-manager.yaml
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.4
    info:
      description: '[CIS Kubernetes] Ensure that the controller manager pod specification file ownership is set to root:root'
      control: 1.1.4
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/manifests/kube-controller-manager.yaml
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.5
    info:
      description: '[CIS Kubernetes] Ensure that the scheduler pod specification file permissions are set to 644 or more restrictive'
      control: 1.1.5
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/manifests/kube-scheduler.yaml
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.6
    info:
      description: '[CIS Kubernetes] Ensure that the scheduler pod specification file ownership is set to root:root'
      control: 1.1.6
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/manifests/kube-scheduler.yaml
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.7
    info:
      description: '[CIS Kubernetes] Ensure that the etcd pod specification file permissions are set to 644 or more restrictive'
      control: 1.1.7
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - file:
          path: /etc/kubernetes/manifests/etcd.yaml
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.8
    info:
      description: '[CIS Kubernetes] Ensure that the etcd pod specification file ownership is set to root:root'
      control: 1.1.8
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - file:
          path: /etc/kubernetes/manifests/etcd.yaml
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.11
    info:
      description: '[CIS Kubernetes] Ensure that the etcd data directory permissions are set to 700 or more restrictive'
      control: 1.1.11
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - file:
          path: process.flag("etcd", "--data-dir")
        condition: (file.permissions & 0700) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.12
    info:
      description: '[CIS Kubernetes] Ensure that the etcd data directory ownership is set to etcd:etcd'
      control: 1.1.12
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - file:
          path: process.flag("etcd", "--data-dir")
        condition: file.user == "etcd" && file.group == "etcd"
  - id: cis-kubernetes-1.5.1-1.1.13
    info:
      description: '[CIS Kubernetes] Ensure that the admin.conf file permissions are set to 644 or more restrictive'
      control: 1.1.13
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/admin.conf
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.14
    info:
      description: '[CIS Kubernetes] Ensure that the admin.conf file ownership is set to root:root'
      control: 1.1.14
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/admin.conf
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.15
    info:
      description: '[CIS Kubernetes] Ensure that the scheduler.conf file permissions are set to 644 or more restrictive'
      control: 1.1.15
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/scheduler.conf
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.16
    info:
      description: '[CIS Kubernetes] Ensure that the scheduler.conf file ownership is set to root:root'
      control: 1.1.16
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/scheduler.conf
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.17
    info:
      description: '[CIS Kubernetes] Ensure that the controller-manager.conf file permissions are set to 644 or more restrictive'
      control: 1.1.17
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/controller-manager.conf
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.1.18
    info:
      description: '[CIS Kubernetes] Ensure that the controller-manager.conf file ownership is set to root:root'
      control: 1.1.18
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/controller-manager.conf
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.19
    info:
      description: '[CIS Kubernetes] Ensure that the Kubernetes PKI directory and file ownership is set to root:root'
      control: 1.1.19
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/pki/
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-1.1.20
    info:
      description: '[CIS Kubernetes] Ensure that the Kubernetes PKI certificate file permissions are set to 644 or more restrictive'
      control: 1.1.20
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - file:
          path: /etc/kubernetes/pki/*.crt
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-1.2.2
    info:
      description: '[CIS Kubernetes] Ensure that the --basic-auth-file argument is not set'
      control: 1.2.2
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: '!process.hasFlag("--basic-auth-file")'
  - id: cis-kubernetes-1.5.1-1.2.3
    info:
      description: '[CIS Kubernetes] Ensure that the --token-auth-file parameter is not set'
      control: 1.2.3
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: '!process.hasFlag("--token-auth-file")'
  - id: cis-kubernetes-1.5.1-1.2.4
    info:
      description: '[CIS Kubernetes] Ensure that the --kubelet-https argument is set to true'
      control: 1.2.4
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--kubelet-https") == "true"
  - id: cis-kubernetes-1.5.1-1.2.5
    info:
      description: '[CIS Kubernetes] Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate'
      control: 1.2.5
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--kubelet-client-certificate") != "" && process.flag("--kubelet-client-key") != ""
  - id: cis-kubernetes-1.5.1-1.2.6
    info:
      description: '[CIS Kubernetes] Ensure that the --kubelet-certificate-authority argument is set as appropriate'
      control: 1.2.6
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--kubelet-certificate-authority") != ""
  - id: cis-kubernetes-1.5.1-1.2.7
    info:
      description: '[CIS Kubernetes] Ensure that the --authorization-mode argument is not set to AlwaysAllow (API server)'
      control: 1.2.7
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--authorization-mode") != "AlwaysAllow"
  - id: cis-kubernetes-1.5.1-1.2.8
    info:
      description: '[CIS Kubernetes] Ensure that the --authorization-mode argument includes Node'
      control: 1.2.8
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--authorization-mode") =~ "Node"
  - id: cis-kubernetes-1.5.1-1.2.9
    info:
      description: '[CIS Kubernetes] Ensure that the --authorization-mode argument includes RBAC'
      control: 1.2.9
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--authorization-mode") =~ "RBAC"
  - id: cis-kubernetes-1.5.1-1.2.11
    info:
      description: '[CIS Kubernetes] Ensure that the admission control plugin AlwaysAdmit is not set'
      control: 1.2.11
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--enable-admission-plugins") !~ "AlwaysAdmit"
  - id: cis-kubernetes-1.5.1-1.2.14
    info:
      description: '[CIS Kubernetes] Ensure that the admission control plugin ServiceAccount is set'
      control: 1.2.14
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--disable-admission-plugins") !~ "ServiceAccount"
  - id: cis-kubernetes-1.5.1-1.2.15
    info:
      description: '[CIS Kubernetes] Ensure that the admission control plugin NamespaceLifecycle is set'
      control: 1.2.15
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--disable-admission-plugins") !~ "NamespaceLifecycle"
  - id: cis-kubernetes-1.5.1-1.2.16
    info:
      description: '[CIS Kubernetes] Ensure that the admission control plugin PodSecurityPolicy is set'
      control: 1.2.16
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--enable-admission-plugins") =~ "PodSecurityPolicy"
  - id: cis-kubernetes-1.5.1-1.2.17
    info:
      description: '[CIS Kubernetes] Ensure that the admission control plugin NodeRestriction is set'
      control: 1.2.17
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--enable-admission-plugins") =~ "NodeRestriction"
  - id: cis-kubernetes-1.5.1-1.2.18
    info:
      description: '[CIS Kubernetes] Ensure that the --insecure-bind-address argument is not set'
      control: 1.2.18
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: '!process.hasFlag("--insecure-bind-address")'
  - id: cis-kubernetes-1.5.1-1.2.19
    info:
      description: '[CIS Kubernetes] Ensure that the --insecure-port argument is set to 0'
      control: 1.2.19
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--insecure-port") == "0"
  - id: cis-kubernetes-1.5.1-1.2.20
    info:
      description: '[CIS Kubernetes] Ensure that the --secure-port argument is not set to 0'
      control: 1.2.20
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: '!process.hasFlag("--secure-port") || process.flag("--secure-port") != "0"'
  - id: cis-kubernetes-1.5.1-1.2.21
    info:
      description: '[CIS Kubernetes] Ensure that the --profiling argument is set to false (API server)'
      control: 1.2.21
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--profiling") == "false"
  - id: cis-kubernetes-1.5.1-1.2.22
    info:
      description: '[CIS Kubernetes] Ensure that the --audit-log-path argument is set'
      control: 1.2.22
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.hasFlag("--audit-log-path")
  - id: cis-kubernetes-1.5.1-1.2.23
    info:
      description: '[CIS Kubernetes] Ensure that the --audit-log-maxage argument is set to 30 or as appropriate'
      control: 1.2.23
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.hasFlag("--audit-log-maxage")
  - id: cis-kubernetes-1.5.1-1.2.24
    info:
      description: '[CIS Kubernetes] Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate'
      control: 1.2.24
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.hasFlag("--audit-log-maxbackup")
  - id: cis-kubernetes-1.5.1-1.2.25
    info:
      description: '[CIS Kubernetes] Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate'
      control: 1.2.25
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.hasFlag("--audit-log-maxsize")
  - id: cis-kubernetes-1.5.1-1.2.26
    info:
      description: '[CIS Kubernetes] Ensure that the --request-timeout argument is set as appropriate'
      control: 1.2.26
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.hasFlag("--request-timeout")
  - id: cis-kubernetes-1.5.1-1.2.27
    info:
      description: '[CIS Kubernetes] Ensure that the --service-account-lookup argument is set to true'
      control: 1.2.27
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--service-account-lookup") == "true"
  - id: cis-kubernetes-1.5.1-1.2.28
    info:
      description: '[CIS Kubernetes] Ensure that the --service-account-key-file argument is set as appropriate'
      control: 1.2.28
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--service-account-key-file") != ""
  - id: cis-kubernetes-1.5.1-1.2.29
    info:
      description: '[CIS Kubernetes] Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate'
      control: 1.2.29
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--etcd-certfile") != "" && process.flag("--etcd-keyfile") != ""
  - id: cis-kubernetes-1.5.1-1.2.30
    info:
      description: '[CIS Kubernetes] Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (API server)'
      control: 1.2.30
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--tls-cert-file") != "" && process.flag("--tls-private-key-file") != ""
  - id: cis-kubernetes-1.5.1-1.2.31
    info:
      description: '[CIS Kubernetes] Ensure that the --client-ca-file argument is set as appropriate (API server)'
      control: 1.2.31
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--client-ca-file") != ""
  - id: cis-kubernetes-1.5.1-1.2.32
    info:
      description: '[CIS Kubernetes] Ensure that the --etcd-cafile argument is set as appropriate'
      control: 1.2.32
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--etcd-cafile") != ""
  - id: cis-kubernetes-1.5.1-1.2.33
    info:
      description: '[CIS Kubernetes] Ensure that the --encryption-provider-config argument is set as appropriate'
      control: 1.2.33
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--encryption-provider-config") != ""
  - id: cis-kubernetes-1.5.1-1.3.2
    info:
      description: '[CIS Kubernetes] Ensure that the --profiling argument is set to false (Controller Manager)'
      control: 1.3.2
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-controller-manager
        condition: process.flag("--profiling") == "false"
  - id: cis-kubernetes-1.5.1-1.3.3
    info:
      description: '[CIS Kubernetes] Ensure that the --use-service-account-credentials argument is set to true'
      control: 1.3.3
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-controller-manager
        condition: process.flag("--use-service-account-credentials") == "true"
  - id: cis-kubernetes-1.5.1-1.3.4
    info:
      description: '[CIS Kubernetes] Ensure that the --service-account-private-key-file argument is set as appropriate'
      control: 1.3.4
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-controller-manager
        condition: process.flag("--service-account-private-key-file") != ""
  - id: cis-kubernetes-1.5.1-1.3.5
    info:
      description: '[CIS Kubernetes] Ensure that the --root-ca-file argument is set as appropriate'
      control: 1.3.5
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-controller-manager
        condition: process.flag("--root-ca-file") != ""
  - id: cis-kubernetes-1.5.1-1.3.6
    info:
      description: '[CIS Kubernetes] Ensure that the RotateKubeletServerCertificate argument is set to true (Controller Manager)'
      control: 1.3.6
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-controller-manager
        condition: process.flag("--feature-gates") =~ "RotateKubeletServerCertificate=true"
  - id: cis-kubernetes-1.5.1-1.3.7
    info:
      description: '[CIS Kubernetes] Ensure that the --bind-address argument is set to 127.0.0.1 (Controller Manager)'
      control: 1.3.7
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-controller-manager
        condition: process.flag("--bind-address") == "127.0.0.1"
  - id: cis-kubernetes-1.5.1-1.4.1
    info:
      description: '[CIS Kubernetes] Ensure that the --profiling argument is set to false (Scheduler)'
      control: 1.4.1
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-scheduler
        condition: process.flag("--profiling") == "false"
  - id: cis-kubernetes-1.5.1-1.4.2
    info:
      description: '[CIS Kubernetes] Ensure that the --bind-address argument is set to 127.0.0.1 (Scheduler)'
      control: 1.4.2
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-scheduler
        condition: process.flag("--bind-address") == "127.0.0.1"
  - id: cis-kubernetes-1.5.1-2.1
    info:
      description: '[CIS Kubernetes] Ensure that the --cert-file and --key-file arguments are set as appropriate'
      control: '2.1'
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - process:
          name: etcd
        condition: process.flag("--cert-file") != "" && process.flag("--key-file") != ""
  - id: cis-kubernetes-1.5.1-2.2
    info:
      description: '[CIS Kubernetes] Ensure that the --client-cert-auth argument is set to true'
      control: '2.2'
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - process:
          name: etcd
        condition: process.flag("--client-cert-auth") == "true"
  - id: cis-kubernetes-1.5.1-2.3
    info:
      description: '[CIS Kubernetes] Ensure that the --auto-tls argument is not set to true'
      control: '2.3'
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - process:
          name: etcd
        condition: process.flag("--auto-tls") != "true"
  - id: cis-kubernetes-1.5.1-2.4
    info:
      description: '[CIS Kubernetes] Ensure that the --peer-cert-file and --peer-key-file arguments are set as appropriate'
      control: '2.4'
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - process:
          name: etcd
        condition: process.flag("--peer-cert-file") != "" && process.flag("--peer-key-file") != ""
  - id: cis-kubernetes-1.5.1-2.5
    info:
      description: '[CIS Kubernetes] Ensure that the --peer-client-cert-auth argument is set to true'
      control: '2.5'
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - process:
          name: etcd
        condition: process.flag("--peer-client-cert-auth") == "true"
  - id: cis-kubernetes-1.5.1-2.6
    info:
      description: '[CIS Kubernetes] Ensure that the --peer-auto-tls argument is not set to true'
      control: '2.6'
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "etcd"
    resources:
      - process:
          name: etcd
        condition: process.flag("--peer-auto-tls") != "true"
  - id: cis-kubernetes-1.5.1-3.2.1
    info:
      description: '[CIS Kubernetes] Ensure that a minimal audit policy is created'
      control: 3.2.1
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") == "master"
    resources:
      - process:
          name: kube-apiserver
        condition: process.flag("--audit-policy-file") != ""
  - id: cis-kubernetes-1.5.1-4.1.1
    info:
      description: '[CIS Kubernetes] Ensure that the kubelet service file permissions are set to 644 or more restrictive'
      control: 4.1.1
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: /usr/lib/systemd/system/kubelet.service
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-4.1.2
    info:
      description: '[CIS Kubernetes] Ensure that the kubelet service file ownership is set to root:root'
      control: 4.1.2
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: /usr/lib/systemd/system/kubelet.service
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-4.1.3
    info:
      description: '[CIS Kubernetes] Ensure that the proxy kubeconfig file permissions are set to 644 or more restrictive'
      control: 4.1.3
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: /var/lib/kube-proxy/kubeconfig
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-4.1.4
    info:
      description: '[CIS Kubernetes] Ensure that the proxy kubeconfig file ownership is set to root:root'
      control: 4.1.4
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: /var/lib/kube-proxy/kubeconfig
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-4.1.5
    info:
      description: '[CIS Kubernetes] Ensure that the kubelet.conf file permissions are set to 644 or more restrictive'
      control: 4.1.5
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: /etc/kubernetes/kubelet.conf
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-4.1.6
    info:
      description: '[CIS Kubernetes] Ensure that the kubelet.conf file ownership is set to root:root'
      control: 4.1.6
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: /etc/kubernetes/kubelet.conf
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-4.1.7
    info:
      description: '[CIS Kubernetes] Ensure that the certificate authorities file permissions are set to 644 or more restrictive'
      control: 4.1.7
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: process.flag("kubelet", "--client-ca-file")
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-4.1.8
    info:
      description: '[CIS Kubernetes] Ensure that the client certificate authorities file ownership is set to root:root'
      control: 4.1.8
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: process.flag("kubelet", "--client-ca-file")
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-4.1.9
    info:
      description: '[CIS Kubernetes] Ensure that the kubelet configuration file has permissions set to 644 or more restrictive'
      control: 4.1.9
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: process.flag("kubelet", "--config")
        condition: (file.permissions & 0644) == file.permissions
  - id: cis-kubernetes-1.5.1-4.1.10
    info:
      description: '[CIS Kubernetes] Ensure that the kubelet configuration file ownership is set to root:root'
      control: 4.1.10
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - file:
          path: process.flag("kubelet", "--config")
        condition: file.user == "root" && file.group == "root"
  - id: cis-kubernetes-1.5.1-4.2.1
    info:
      description: '[CIS Kubernetes] Ensure that the anonymous-auth argument is set to false'
      control: 4.2.1
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--anonymous-auth") == "false"
  - id: cis-kubernetes-1.5.1-4.2.2
    info:
      description: '[CIS Kubernetes] Ensure that the --authorization-mode argument is not set to AlwaysAllow (Kubelet)'
      control: 4.2.2
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--authorization-mode") !~ "AlwaysAllow"
  - id: cis-kubernetes-1.5.1-4.2.3
    info:
      description: '[CIS Kubernetes] Ensure that the --client-ca-file argument is set as appropriate (Kubelet)'
      control: 4.2.3
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--client-ca-file") != ""
  - id: cis-kubernetes-1.5.1-4.2.4
    info:
      description: '[CIS Kubernetes] Ensure that the --read-only-port argument is set to 0'
      control: 4.2.4
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--read-only-port") == "0"
  - id: cis-kubernetes-1.5.1-4.2.5
    info:
      description: '[CIS Kubernetes] Ensure that the --streaming-connection-idle-timeout argument is not set to 0'
      control: 4.2.5
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--streaming-connection-idle-timeout") != "0"
  - id: cis-kubernetes-1.5.1-4.2.6
    info:
      description: '[CIS Kubernetes] Ensure that the --protect-kernel-defaults argument is set to true'
      control: 4.2.6
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--protect-kernel-defaults") == "true"
  - id: cis-kubernetes-1.5.1-4.2.7
    info:
      description: '[CIS Kubernetes] Ensure that the --make-iptables-util-chains argument is set to true'
      control: 4.2.7
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: '!process.hasFlag("--make-iptables-util-chains") || process.flag("--make-iptables-util-chains") == "true"'
  - id: cis-kubernetes-1.5.1-4.2.10
    info:
      description: '[CIS Kubernetes] Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Kubelet)'
      control: 4.2.10
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--tls-cert-file") != "" && process.flag("--tls-private-key-file") != ""
  - id: cis-kubernetes-1.5.1-4.2.11
    info:
      description: '[CIS Kubernetes] Ensure that the --rotate-certificates argument is not set to false'
      control: 4.2.11
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: '!process.hasFlag("--rotate-certificates") || process.flag("--rotate-certificates") == "true"'
  - id: cis-kubernetes-1.5.1-4.2.12
    info:
      description: '[CIS Kubernetes] Ensure that the RotateKubeletServerCertificate argument is set to true (Kubelet)'
      control: 4.2.12
    scope:
      - kubernetesNode
    hostSelector: node.label("kubernetes.io/role") not in ["master", "etcd"]
    resources:
      - process:
          name: kubelet
        condition: process.flag("--feature-gates") =~ "RotateKubeletServerCertificate=true"
  - id: cis-kubernetes-1.5.1-5.2.2
    info:
      description: '[CIS Kubernetes] Minimize the admission of containers wishing to share the host process ID namespace'
      control: 5.2.2
    scope:
      - kubernetesCluster
    hostSelector: null
    resources:
      - kubeApiserver:
          kind: podsecuritypolicies
          version: v1beta1
          group: policy
          apiRequest:
            verb: list
        condition: count(kube.resource.jq(".spec.hostPID") != "true") > 0
  - id: cis-kubernetes-1.5.1-5.2.3
    info:
      description: '[CIS Kubernetes] Minimize the admission of containers wishing to share the host IPC namespace'
      control: 5.2.3
    scope:
      - kubernetesCluster
    hostSelector: null
    resources:
      - kubeApiserver:
          kind: podsecuritypolicies
          version: v1beta1
          group: policy
          apiRequest:
            verb: list
        condition: count(kube.resource.jq(".spec.hostIPC") != "true") > 0
  - id: cis-kubernetes-1.5.1-5.2.4
    info:
      description: '[CIS Kubernetes] Minimize the admission of containers wishing to share the host network namespace'
      control: 5.2.4
    scope:
      - kubernetesCluster
    hostSelector: null
    resources:
      - kubeApiserver:
          kind: podsecuritypolicies
          version: v1beta1
          group: policy
          apiRequest:
            verb: list
        condition: count(kube.resource.jq(".spec.hostNetwork") != "true") > 0
  - id: cis-kubernetes-1.5.1-5.2.5
    info:
      description: '[CIS Kubernetes] Minimize the admission of containers with allowPrivilegeEscalation'
      control: 5.2.5
    scope:
      - kubernetesCluster
    hostSelector: null
    resources:
      - kubeApiserver:
          kind: podsecuritypolicies
          version: v1beta1
          group: policy
          apiRequest:
            verb: list
        condition: count(kube.resource.jq(".spec.allowPrivilegeEscalation") != "true") > 0
  - id: cis-kubernetes-1.5.1-5.7.4
    info:
      description: '[CIS Kubernetes] The default namespace should not be used'
      control: 5.7.4
    scope:
      - kubernetesCluster
    hostSelector: null
    resources:
      - kubeApiserver:
          kind: pods
          version: v1
          namespace: default
          apiRequest:
            verb: list
        condition: count(_) == 0
      - kubeApiserver:
          kind: services
          version: v1
          namespace: default
          fieldSelector: metadata.name!=kubernetes
          apiRequest:
            verb: list
        condition: count(_) == 0
